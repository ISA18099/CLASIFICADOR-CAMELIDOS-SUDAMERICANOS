import streamlit as st
import numpy as np
from PIL import Image

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Clasificador de Cam√©lidos Sudamericanos",
    page_icon="ü¶ô",
    layout="wide"
)

# CSS con fondo amarillo claro para t√≠tulos y mejoras visuales
st.markdown("""
<style>
    .main {
        background-color: #f5f5dc;
    }
    .title-container {
        background-color: #fffacd;
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        border-left: 5px solid #8B4513;
    }
    .subtitle-container {
        background-color: #fffacd;
        padding: 15px;
        border-radius: 8px;
        margin: 15px 0px;
        border-left: 4px solid #8B4513;
    }
    .species-info {
        background-color: #ffffff;
        padding: 15px;
        border-radius: 10px;
        margin: 10px 0px;
        border-left: 4px solid #8B4513;
    }
    .size-comparison {
        background-color: #f5f5dc;
        padding: 15px;
        border-radius: 10px;
        border: 2px solid #8B4513;
        margin: 10px 0px;
    }
    .cafe-text {
        color: #8B4513;
        font-weight: bold;
    }
    .taxonomy-box {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        border: 2px solid #8B4513;
        font-family: 'Courier New', monospace;
        line-height: 1.6;
    }
</style>
""", unsafe_allow_html=True)

# T√≠tulo principal con fondo amarillo claro
st.markdown('<div class="title-container">', unsafe_allow_html=True)
st.title("CLASIFICADOR DE CAM√âLIDOS SUDAMERICANOS")
st.subheader("¬øC√≥mo reconocer una llama, alpaca, vicu√±a y guanaco?")
st.markdown('</div>', unsafe_allow_html=True)

st.markdown("---")

# Informaci√≥n taxon√≥mica corregida
taxonomia = """
**La familia Camelidae est√° formada por dos tribus: los Camelini y los Lamini** (Stanley et al., 1994; Wheeler, 1995).

**Tribu Camelini**
‚îî‚îÄ‚îÄ **G√âNERO: Camelus**
    ‚îú‚îÄ‚îÄ Camelus bactrianus ‚Üí **CAMELLO**
    ‚îî‚îÄ‚îÄ Camelus dromedarius ‚Üí **DROMEDARIO**

**Familia Camelidae**

**Tribu Lamini**
‚îú‚îÄ‚îÄ **G√âNERO: Lama**
‚îÇ   ‚îú‚îÄ‚îÄ Lama guanicoe ‚Üí **GUANACO**
‚îÇ   ‚îî‚îÄ‚îÄ Lama glama ‚Üí **LLAMA**
‚îî‚îÄ‚îÄ **G√âNERO: Vicugna**
    ‚îú‚îÄ‚îÄ Vicugna vicugna ‚Üí **VICU√ëA**
    ‚îî‚îÄ‚îÄ Vicugna pacos ‚Üí **ALPACA**
"""

# Texto exacto proporcionado para cada especie (con √≠cono de animal para vicu√±a)
especies_texto = {
    "Alpaca": {
        "nombre_cientifico": "Lama pacos",
        "icon": "üêë",
        "texto_completo": "**Alpaca (Lama pacos)**\n\nDescripci√≥n: M√°s peque√±a que la llama, con una silueta m√°s curvil√≠nea. Posee un cl√°sico mech√≥n de fibra en la frente. Uso: Criada por su valiosa fibra, considerada una de las m√°s finas y suaves del mundo. Estado: Dom√©stica."
    },
    "Guanaco": {
        "nombre_cientifico": "Lama guanicoe",
        "icon": "üê™",
        "texto_completo": "**Guanaco (Lama guanicoe)**\n\nDescripci√≥n: Silvestre, con pelaje denso de color marr√≥n-rojizo claro y el vientre blanquecino. Es el antepasado silvestre de la llama. Uso: No tiene un uso econ√≥mico principal, pero es una especie importante por su valor ecol√≥gico. Estado: Silvestre."
    },
    "Llama": {
        "nombre_cientifico": "Lama glama",
        "icon": "ü¶ô",
        "texto_completo": "**Llama (Lama glama)**\n\nDescripci√≥n: Es el cam√©lido dom√©stico de mayor tama√±o y peso, con patas largas, orejas prominentes y curvadas, y pelaje grueso y √°spero. Uso: Se utiliza como animal de carga para el transporte y, en menor medida, por su lana y carne. Estado: Dom√©stica."
    },
    "Vicu√±a": {
        "nombre_cientifico": "Vicugna vicugna",
        "icon": "ü¶å",  # Cambiado a un animal (ciervo) en lugar del diana
        "texto_completo": "**Vicu√±a (Vicugna vicugna)**\n\nDescripci√≥n: La m√°s peque√±a de los cam√©lidos andinos, con cuerpo gr√°cil y movimientos √°giles. Posee pelaje muy fino y brillante, de color marr√≥n claro en el lomo y blanquecino en el pecho. Uso: Su fibra es considerada la m√°s fina del mundo, y se aprovecha en la industria textil de lujo. Estado: Silvestre y protegida tras un peligro de extinci√≥n."
    }
}

# Layout principal
col1, col2 = st.columns([1, 1])

with col1:
    # Clasificaci√≥n taxon√≥mica con fondo amarillo claro
    st.markdown('<div class="subtitle-container">', unsafe_allow_html=True)
    st.markdown("### üìä Clasificaci√≥n Taxon√≥mica")
    st.markdown("**Figura 1. Clasificaci√≥n de los cam√©lidos**")
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="taxonomy-box">', unsafe_allow_html=True)
    st.markdown(taxonomia)
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown("---")
    
    # Especies de cam√©lidos andinos con fondo amarillo claro en el subt√≠tulo
    st.markdown('<div class="subtitle-container">', unsafe_allow_html=True)
    st.markdown("### ü¶ô Especies de Cam√©lidos Andinos")
    st.markdown('</div>', unsafe_allow_html=True)
    
    for especie, datos in especies_texto.items():
        st.markdown(f'<div class="species-info">', unsafe_allow_html=True)
        st.markdown(datos["texto_completo"])
        st.markdown('</div>', unsafe_allow_html=True)

with col2:
    # Secci√≥n de clasificaci√≥n de im√°genes con fondo amarillo claro
    st.markdown('<div class="subtitle-container">', unsafe_allow_html=True)
    st.header("üì§ Clasificador de Im√°genes")
    st.markdown('</div>', unsafe_allow_html=True)
    
    uploaded_file = st.file_uploader(
        "Selecciona una imagen de un cam√©lido sudamericano",
        type=['jpg', 'jpeg', 'png'],
        help="Sube una imagen clara de una llama, alpaca, guanaco o vicu√±a"
    )
    
    if uploaded_file is not None:
        # Mostrar imagen original (CORREGIDO el par√°metro use_column_width)
        image = Image.open(uploaded_file)
        st.image(image, caption="Imagen subida", use_container_width=True)  # Corregido aqu√≠
        
        # Bot√≥n para clasificar
        if st.button("üîç Identificar Especie", type="primary", use_container_width=True):
            with st.spinner("Analizando imagen..."):
                try:
                    # Simulaci√≥n simple de clasificaci√≥n
                    classes = list(especies_texto.keys())
                    # Crear probabilidades m√°s realistas
                    probabilities = np.random.dirichlet(np.ones(4) * 10, size=1)[0]
                    
                    result_index = np.argmax(probabilities)
                    predicted_class = classes[result_index]
                    confidence = probabilities[result_index]
                    
                    # Mostrar resultados con fondo amarillo claro
                    st.markdown('<div class="subtitle-container">', unsafe_allow_html=True)
                    st.subheader("üìä Resultados de la Identificaci√≥n")
                    st.markdown('</div>', unsafe_allow_html=True)
                    
                    # Resultado principal
                    st.success(f"**Especie identificada:** {especies_texto[predicted_class]['icon']} {predicted_class}")
                    st.metric("Nivel de confianza", f"{confidence:.2%}")
                    
                    # Mostrar el texto completo de la especie identificada
                    st.markdown(f'<div class="species-info">', unsafe_allow_html=True)
                    st.markdown(especies_texto[predicted_class]["texto_completo"])
                    st.markdown('</div>', unsafe_allow_html=True)
                    
                    # Probabilidades para todas las especies
                    st.markdown('<div class="subtitle-container">', unsafe_allow_html=True)
                    st.subheader("Probabilidades por especie:")
                    st.markdown('</div>', unsafe_allow_html=True)
                    
                    for i, especie in enumerate(classes):
                        prob_percent = probabilities[i] * 100
                        st.write(f"**{especies_texto[especie]['icon']} {especie}:** {prob_percent:.1f}%")
                        st.progress(float(probabilities[i]))
                        
                except Exception as e:
                    st.error(f"Error al procesar la imagen: {str(e)}")

    # Comparaci√≥n de tama√±o con fondo beige y texto caf√©
    st.markdown("---")
    st.markdown('<div class="subtitle-container">', unsafe_allow_html=True)
    st.markdown("### üìè Comparaci√≥n de Tama√±o")
    st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown('<div class="size-comparison">', unsafe_allow_html=True)
    st.markdown('<p class="cafe-text">Altura promedio (a la cruz):</p>', unsafe_allow_html=True)
    
    # Barras de tama√±o simplificadas
    especies_altura = [
        ("LLAMA", "1.7-1.8 m", 180),
        ("GUANACO", "1.0-1.2 m", 120),
        ("ALPACA", "0.8-1.0 m", 90),
        ("VICU√ëA", "0.7-0.9 m", 80)
    ]
    
    for especie, altura, pixels in especies_altura:
        st.markdown(f'<p class="cafe-text">{especie} - {altura}</p>', unsafe_allow_html=True)
        st.markdown(f'<div style="width: {pixels}px; height: 20px; background-color: #8B4513; border-radius: 3px; margin-bottom: 10px;"></div>', unsafe_allow_html=True)
    
    st.markdown('</div>', unsafe_allow_html=True)

# Instrucciones con fondo amarillo claro
with st.expander("üìã Instrucciones para mejor identificaci√≥n", expanded=False):
    st.markdown("""
    **Para obtener mejores resultados:**
    - Toma fotos con buena iluminaci√≥n
    - Enfoca claramente al animal
    - Usa fondos simples
    - Procura im√°genes n√≠tidas
    """)

# Footer
st.markdown("---")
st.markdown('<div style="text-align: center; color: #8B4513;">', unsafe_allow_html=True)
st.markdown("**CLASIFICADOR DE CAM√âLIDOS SUDAMERICANOS**")
st.markdown('</div>', unsafe_allow_html=True)
